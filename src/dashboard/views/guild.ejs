<div class="container">
    <!-- Server Header -->
    <div class="row mb-4">
        <div class="col-lg-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/dashboard">Dashboard</a></li>
                    <li class="breadcrumb-item active" aria-current="page"><%= guild.name %></li>
                </ol>
            </nav>
            
            <div class="d-flex align-items-center">
                <% if (guild.icon) { %>
                <img src="<%= guild.icon %>" alt="<%= guild.name %>" class="me-3 rounded-circle" width="64" height="64">
                <% } else { %>
                <div class="guild-icon-placeholder rounded-circle me-3 d-flex align-items-center justify-content-center">
                    <%= guild.name.charAt(0) %>
                </div>
                <% } %>
                <div>
                    <h1 class="display-6 mb-0"><%= guild.name %></h1>
                    <p class="text-muted mb-0">
                        <i class="fas fa-users me-1"></i> <%= guild.memberCount.toLocaleString() %> members
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Settings Tabs -->
    <ul class="nav nav-tabs mb-4" id="settingsTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="general-tab" data-bs-toggle="tab" data-bs-target="#general" 
                    type="button" role="tab" aria-controls="general" aria-selected="true">
                <i class="fas fa-cog me-2"></i> General
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="welcome-tab" data-bs-toggle="tab" data-bs-target="#welcome" 
                    type="button" role="tab" aria-controls="welcome" aria-selected="false">
                <i class="fas fa-door-open me-2"></i> Welcome
            </button>
        </li>
    </ul>
    
    <!-- Alert for feedback -->
    <div id="settingsAlert" class="alert alert-success alert-dismissible fade d-none" role="alert">
        <span id="alertMessage"></span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    
    <!-- Settings Content -->
    <div class="tab-content" id="settingsTabContent">
        <!-- General Settings -->
        <div class="tab-pane fade show active" id="general" role="tabpanel" aria-labelledby="general-tab">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-sliders-h me-2"></i> General Settings
                    </h5>
                </div>
                <div class="card-body">
                    <form id="generalSettingsForm">
                        <div class="mb-3">
                            <label for="prefix" class="form-label">Command Prefix</label>
                            <input type="text" class="form-control" id="prefix" name="prefix" 
                                   value="<%= settings.prefix %>" maxlength="10">
                            <div class="form-text">The prefix used for text commands (e.g., !help)</div>
                        </div>
                        
                        <div class="text-end">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        
        <!-- Welcome Settings -->
        <div class="tab-pane fade" id="welcome" role="tabpanel" aria-labelledby="welcome-tab">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-door-open me-2"></i> Welcome Message Settings
                    </h5>
                </div>
                <div class="card-body">
                    <form id="welcomeSettingsForm">
                        <div class="mb-3">
                            <label for="welcomeChannelId" class="form-label">Welcome Channel</label>
                            <select class="form-select" id="welcomeChannelId" name="welcomeChannelId">
                                <option value="">Disabled</option>
                                <% channels.forEach(channel => { %>
                                <option value="<%= channel.id %>" 
                                        <%= settings.welcomeChannelId === channel.id ? 'selected' : '' %>>
                                    # <%= channel.name %>
                                </option>
                                <% }); %>
                            </select>
                            <div class="form-text">The channel where welcome messages will be sent</div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="welcomeMessage" class="form-label">Welcome Message</label>
                            <textarea class="form-control" id="welcomeMessage" name="welcomeMessage" 
                                      rows="4"><%= settings.welcomeMessage || 'Welcome {user} to {server}!' %></textarea>
                            <div class="form-text">
                                Available variables:
                                <code>{user}</code> - @mentions the user,
                                <code>{username}</code> - the username without @,
                                <code>{server}</code> - the server name,
                                <code>{memberCount}</code> - the server member count
                            </div>
                        </div>
                        
                        <div class="text-end">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Handle General Settings Form
    const generalForm = document.getElementById('generalSettingsForm');
    generalForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = {
            prefix: document.getElementById('prefix').value,
            welcomeChannelId: document.getElementById('welcomeChannelId').value,
            welcomeMessage: document.getElementById('welcomeMessage').value
        };
        
        // Save settings
        saveSettings(formData);
    });
    
    // Handle Welcome Settings Form
    const welcomeForm = document.getElementById('welcomeSettingsForm');
    welcomeForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = {
            prefix: document.getElementById('prefix').value,
            welcomeChannelId: document.getElementById('welcomeChannelId').value,
            welcomeMessage: document.getElementById('welcomeMessage').value
        };
        
        // Save settings
        saveSettings(formData);
    });
    
    // Function to save settings
    function saveSettings(formData) {
        fetch('/api/guilds/<%= guild.id %>/settings', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then(response => response.json())
        .then(data => {
            const alert = document.getElementById('settingsAlert');
            const alertMessage = document.getElementById('alertMessage');
            
            if (data.success) {
                alert.classList.remove('alert-danger');
                alert.classList.add('alert-success');
                alertMessage.innerText = 'Settings saved successfully!';
            } else {
                alert.classList.remove('alert-success');
                alert.classList.add('alert-danger');
                alertMessage.innerText = data.message || 'An error occurred while saving settings.';
            }
            
            alert.classList.remove('d-none');
            alert.classList.add('show');
            
            // Auto-hide the alert after 5 seconds
            setTimeout(() => {
                alert.classList.remove('show');
                alert.classList.add('d-none');
            }, 5000);
        })
        .catch(error => {
            console.error('Error saving settings:', error);
            const alert = document.getElementById('settingsAlert');
            const alertMessage = document.getElementById('alertMessage');
            
            alert.classList.remove('alert-success');
            alert.classList.add('alert-danger');
            alertMessage.innerText = 'An error occurred while saving settings.';
            
            alert.classList.remove('d-none');
            alert.classList.add('show');
        });
    }
});
</script>