<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> | Discord Bot Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/style.css">
    <link rel="icon" href="/img/logo.png">
</head>
<body>
    <div class="container">
        <nav class="sidebar">
            <div class="sidebar-header">
                <div class="logo">
                    <img src="/img/logo.png" alt="Bot Logo">
                    <h2>Bot Dashboard</h2>
                </div>
                <button class="mobile-toggle" id="sidebarToggle">
                    <i class="fas fa-bars"></i>
                </button>
            </div>
            <ul class="nav-menu">
                <li class="<%= title === 'Discord Bot Dashboard' ? 'active' : '' %>">
                    <a href="/"><i class="fas fa-home"></i> Home</a>
                </li>
                <% if (user) { %>
                <li class="<%= title === 'Dashboard' ? 'active' : '' %>">
                    <a href="/dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
                </li>
                <% } %>
                <li class="<%= title === 'Commands' ? 'active' : '' %>">
                    <a href="/commands"><i class="fas fa-terminal"></i> Commands</a>
                </li>
                <li class="<%= title === 'About' ? 'active' : '' %>">
                    <a href="/about"><i class="fas fa-info-circle"></i> About</a>
                </li>
                <% if (user) { %>
                <li>
                    <a href="/auth/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
                </li>
                <% } else { %>
                <li>
                    <a href="/auth/login" class="login-btn"><i class="fab fa-discord"></i> Login</a>
                </li>
                <% } %>
            </ul>
            <div class="sidebar-footer">
                <p>&copy; <%= new Date().getFullYear() %> Discord Bot</p>
            </div>
        </nav>
        
        <main class="content">
            <div class="top-bar">
                <div class="page-title">
                    <h1><%= title %></h1>
                </div>
                <div class="user-info">
                    <% if (user) { %>
                        <div class="user-dropdown">
                            <div class="user-avatar">
                                <% if (user.avatar) { %>
                                    <img src="https://cdn.discordapp.com/avatars/<%= user.discordId %>/<%= user.avatar %>.png" alt="<%= user.username %>">
                                <% } else { %>
                                    <div class="default-avatar"><%= user.username.charAt(0) %></div>
                                <% } %>
                            </div>
                            <span class="username"><%= user.username %></span>
                            <div class="dropdown-content">
                                <a href="/dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
                                <a href="/auth/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
                            </div>
                        </div>
                    <% } else { %>
                        <a href="/auth/login" class="login-btn"><i class="fab fa-discord"></i> Login with Discord</a>
                    <% } %>
                </div>
            </div>

<div class="commands-header">
    <h2>Bot Commands</h2>
    <p>Manage available slash commands for the bot. Toggle switches to enable or disable commands globally.</p>
</div>

<div class="commands-list">
    <% if (commands && commands.length > 0) { %>
        <div class="commands-settings-card">
            <form id="commandSettingsForm">
                <div class="search-container">
                    <input type="text" id="commandSearch" placeholder="Search commands..." class="search-input">
                </div>
                
                <div class="commands-table">
                    <table>
                        <thead>
                            <tr>
                                <th>Command</th>
                                <th>Description</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% commands.forEach(command => { %>
                                <tr class="command-row <%= command.disabled ? 'disabled' : '' %>" data-command="<%= command.name %>">
                                    <td class="command-name">/<%= command.name %></td>
                                    <td class="command-description"><%= command.description %></td>
                                    <td class="command-status">
                                        <div class="toggle-switch">
                                            <input type="checkbox" id="cmd-<%= command.name %>" 
                                                   name="enabledCommands" 
                                                   value="<%= command.name %>"
                                                   <%= !command.disabled ? 'checked' : '' %>>
                                            <label for="cmd-<%= command.name %>"></label>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
                
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">Save Settings</button>
                </div>
            </form>
        </div>
    <% } else { %>
        <div class="no-commands">
            <p>No commands are currently available.</p>
        </div>
    <% } %>
</div>

<script>
    // Command search functionality
    document.getElementById('commandSearch').addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        document.querySelectorAll('.command-row').forEach(row => {
            const commandName = row.getAttribute('data-command').toLowerCase();
            const commandDesc = row.querySelector('.command-description').textContent.toLowerCase();
            
            if (commandName.includes(searchTerm) || commandDesc.includes(searchTerm)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });
    
    // Form submission
    document.getElementById('commandSettingsForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Get all enabled commands
        const enabledCommands = Array.from(
            document.querySelectorAll('input[name="enabledCommands"]:checked')
        ).map(checkbox => checkbox.value);
        
        // Get all command names
        const allCommands = Array.from(
            document.querySelectorAll('input[name="enabledCommands"]')
        ).map(checkbox => checkbox.value);
        
        // Calculate disabled commands (inverse of enabled)
        const disabledCommands = allCommands.filter(cmd => !enabledCommands.includes(cmd));
        
        try {
            const response = await fetch('/api/settings/commands', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    disabledCommands: disabledCommands
                }),
            });
            
            const result = await response.json();
            
            if (result.success) {
                showNotification('Command settings saved successfully!', 'success');
            } else {
                showNotification(result.error || 'Failed to save command settings', 'error');
            }
        } catch (error) {
            console.error('Error saving command settings:', error);
            showNotification('An unexpected error occurred', 'error');
        }
    });
    
    // Notification function
    function showNotification(message, type) {
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.textContent = message;
        
        document.body.appendChild(notification);
        
        // Show notification
        setTimeout(() => {
            notification.classList.add('show');
        }, 10);
        
        // Hide and remove notification after 3 seconds
        setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => {
                document.body.removeChild(notification);
            }, 300);
        }, 3000);
    }
</script>

</main>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="/js/main.js"></script>
</body>
</html>